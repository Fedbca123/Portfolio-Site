{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","_ref","children","themeName","setThemeName","useState","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","_jsx","Provider","value","toggleTheme","name","localStorage","setItem","header","homepage","title","about","role","description","resume","social","linkedin","github","projects","stack","sourceCode","livePreview","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","_jsxs","className","style","display","length","href","onClick","type","WbSunnyRoundedIcon","Brightness2Icon","CloseIcon","MenuIcon","Header","About","_Fragment","GitHubIcon","LinkedInIcon","ProjectContainer","project","map","item","uniqid","LaunchIcon","Projects","id","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","ArrowUpwardIcon","fontSize","Contact","concat","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd4f88d0.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://Fedbca123.github.io/cleanfolio',\n  title: 'JS.',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Omar Shalaby',\n  role: 'New Grad Software Engineer',\n  description:\n    'I am a software engineer with a passion for building things. I have experience building full-stack web applications, mobile applications, and machine learning models. I am always looking for new opportunities to learn and grow.',\n  resume: 'https://example.com',\n  social: {\n    linkedin: 'https://linkedin.com/in/omar-shalaby/',\n    github: 'https://github.com/Fedbca123',\n  },\n}\n\nconst projects = [\n  // projects can be added an removed\n  // if there are no projects, Projects section won't show up\n  {\n    name: 'Workout Buddy',\n    description:\n      'Amet asperiores et impedit aliquam consectetur? Voluptates sed a nulla ipsa officia et esse aliquam',\n    stack: ['SASS', 'TypeScript', 'React'],\n    sourceCode: 'https://github.com',\n    livePreview: 'https://github.com',\n  },\n  {\n    name: 'Our Cooking Mama',\n    description:\n      'Amet asperiores et impedit aliquam consectetur? Voluptates sed a nulla ipsa officia et esse aliquam',\n    stack: ['SASS', 'TypeScript', 'React'],\n    sourceCode: 'https://github.com',\n    livePreview: 'https://github.com',\n  },\n  {\n    name: 'Contact Manager',\n    description:\n      'Amet asperiores et impedit aliquam consectetur? Voluptates sed a nulla ipsa officia et esse aliquam',\n    stack: ['SASS', 'TypeScript', 'React'],\n    sourceCode: 'https://github.com',\n    livePreview: 'https://github.com',\n  },\n]\n\nconst skills = [\n  // skills can be added or removed\n  // if there are no skills, Skills section won't show up\n  'HTML',\n  'CSS',\n  'JavaScript',\n  'TypeScript',\n  'React',\n  'React Native',\n  'Redux',\n  'SASS',\n  'Material UI',\n  'Git',\n  'CI/CD',\n  'MongoDB',\n  'Node.js',\n  'Express.js',\n  'Jest',\n  'Enzyme',\n  'C#',\n  '.NET',\n  'MySQL',\n  'Python',\n  'TensorFlow',\n  'Keras',\n  'C',\n  'C++',\n  'Java',\n  'Azure',\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 'shalabymomar@gmail.com',\n}\n\nexport { header, about, projects, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, I am <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>A {role}.</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume}>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.github && (\n              <a\n                href={social.github}\n                aria-label='github'\n                className='link link--icon'\n              >\n                <GitHubIcon />\n              </a>\n            )}\n\n            {social.linkedin && (\n              <a\n                href={social.linkedin}\n                aria-label='linkedin'\n                className='link link--icon'\n              >\n                <LinkedInIcon />\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <a\n      href='https://github.com/rajshekhar26/cleanfolio'\n      className='link footer__link'\n    >\n      Created By Raj Shekhar\n    </a>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}